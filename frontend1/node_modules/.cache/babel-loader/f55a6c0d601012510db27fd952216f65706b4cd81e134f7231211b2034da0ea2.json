{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  employees: []\n};\nconst EmployeeSlice = createSlice({\n  name: 'employee',\n  initialState,\n  reducers: {\n    addEmployee: (state, action) => {\n      console.log(action.payload);\n      state.employees = [...action.payload];\n      //  state.employees.push(...action.payload);\n      // state.push(action.payload);\n    },\n\n    deleteEmployee: (state, action) => {\n      const {\n        id\n      } = [...action.payload];\n      const existingEmployee = state.find(employee => employee.id === id);\n      if (existingEmployee) {\n        return state.filter(employee => employee.id !== id);\n      }\n    },\n    updateEmployee: (state, action) => {\n      // const {id, name, username,email,phone} = [...action.payload]\n      // const existingEmployee = state.find(employee => employee.id === id)\n      // if(existingEmployee){\n      //   existingEmployee.name = name;\n      //   existingEmployee.username = username;\n      //   existingEmployee.email = email;\n      //   existingEmployee.phone = phone;\n      //}\n      state.employees = state.employees.map(employee => employee.id);\n    }\n  }\n});\nexport const {\n  addEmployee,\n  deleteEmployee,\n  updateEmployee\n} = EmployeeSlice.actions;\nexport default EmployeeSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","employees","EmployeeSlice","name","reducers","addEmployee","state","action","console","log","payload","deleteEmployee","id","existingEmployee","find","employee","filter","updateEmployee","map","actions","reducer"],"sources":["F:/react class/project_employee/frontend1/src/features/employee/EmployeeSlice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState = { employees:[]}\r\nconst EmployeeSlice = createSlice({\r\n    name: 'employee',\r\n    initialState,\r\n    reducers: {\r\n      addEmployee: (state, action) => {\r\n        console.log(action.payload)\r\n        state.employees = [...action.payload]\r\n      //  state.employees.push(...action.payload);\r\n       // state.push(action.payload);\r\n      },\r\n      deleteEmployee: (state, action) => {\r\n        const {id} = [...action.payload]\r\n\r\n        const  existingEmployee = state.find(employee => employee.id === id)\r\n        if(existingEmployee){\r\n          return state.filter(employee=> employee.id !== id)\r\n        }\r\n      },\r\n      updateEmployee:(state, action) =>{\r\n        // const {id, name, username,email,phone} = [...action.payload]\r\n        // const existingEmployee = state.find(employee => employee.id === id)\r\n        // if(existingEmployee){\r\n        //   existingEmployee.name = name;\r\n        //   existingEmployee.username = username;\r\n        //   existingEmployee.email = email;\r\n        //   existingEmployee.phone = phone;\r\n        //}\r\n          state.employees = state.employees.map((employee)=>  employee.id)\r\n      }\r\n }\r\n})\r\n\r\nexport const {addEmployee, deleteEmployee, updateEmployee}  = EmployeeSlice.actions;\r\nexport default EmployeeSlice.reducer"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,YAAY,GAAG;EAAEC,SAAS,EAAC;AAAE,CAAC;AACpC,MAAMC,aAAa,GAAGH,WAAW,CAAC;EAC9BI,IAAI,EAAE,UAAU;EAChBH,YAAY;EACZI,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAAC;MAC3BJ,KAAK,CAACL,SAAS,GAAG,CAAC,GAAGM,MAAM,CAACG,OAAO,CAAC;MACvC;MACC;IACD,CAAC;;IACDC,cAAc,EAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAM;QAACK;MAAE,CAAC,GAAG,CAAC,GAAGL,MAAM,CAACG,OAAO,CAAC;MAEhC,MAAOG,gBAAgB,GAAGP,KAAK,CAACQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACH,EAAE,KAAKA,EAAE,CAAC;MACpE,IAAGC,gBAAgB,EAAC;QAClB,OAAOP,KAAK,CAACU,MAAM,CAACD,QAAQ,IAAGA,QAAQ,CAACH,EAAE,KAAKA,EAAE,CAAC;MACpD;IACF,CAAC;IACDK,cAAc,EAAC,CAACX,KAAK,EAAEC,MAAM,KAAI;MAC/B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACED,KAAK,CAACL,SAAS,GAAGK,KAAK,CAACL,SAAS,CAACiB,GAAG,CAAEH,QAAQ,IAAKA,QAAQ,CAACH,EAAE,CAAC;IACpE;EACL;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EAACP,WAAW;EAAEM,cAAc;EAAEM;AAAc,CAAC,GAAIf,aAAa,CAACiB,OAAO;AACnF,eAAejB,aAAa,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}